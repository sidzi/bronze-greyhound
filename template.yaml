# aws cloudformation package ... should work for this
AWSTemplateFormatVersion: "2010-09-09"
Description: "Cloudformation template for all the resources"

Resources:

  DynamoDBManagedPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      ManagedPolicyName: 'PolicyForLambdaDynamoDB'
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - 
            Sid: LambdaReadAndWrite 
            Effect: Allow
            Action:
            - dynamodb:GetItem
            - dynamodb:Query
            - dynamodb:Scan
            - dynamodb:BatchWriteItem
            - dynamodb:PutItem
            - dynamodb:UpdateItem
            Resource: "*"


  LambdaExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      ManagedPolicyArns:
        - !Ref DynamoDBManagedPolicy
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - lambda.amazonaws.com
          Action:
          - sts:AssumeRole

  DynamoDBTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: TableForTODOS
      AttributeDefinitions:
        - AttributeName: "uuid"
          AttributeType: "S"  
      KeySchema:
        - AttributeName: "uuid"
          KeyType: "HASH"
      ProvisionedThroughput:
        ReadCapacityUnits: "2"
        WriteCapacityUnits: "2"

  CreateTodo:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: create-todo-function
      Handler: index.handler
      Code: 
        S3Bucket: todo
        S3Key: code/create-todo.zip
      Runtime: "nodejs12.x"
      Role: !GetAtt LambdaExecutionRole.Arn


  ReadTodo:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: read-todo-function
      Handler: index.handler
      Code: 
        S3Bucket: todo
        S3Key: code/read-todo.zip
      Runtime: "nodejs12.x"
      Role: !GetAtt LambdaExecutionRole.Arn